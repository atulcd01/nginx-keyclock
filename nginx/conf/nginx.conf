worker_processes 1;
events {
    worker_connections  128;
}

http {
  include mime.types;
  default_type application/octet-stream;
  sendfile on;
  keepalive_timeout 65;
#  lua_code_cache off;
  lua_need_request_body on;
  gzip on;

  resolver 127.0.0.11 ipv6=off;
  real_ip_header X-Forwarded-For;
  real_ip_recursive on;

  lua_shared_dict discovery 1m;
  lua_shared_dict sessions 10m;
  lua_package_path '~/lua/?.lua;;';

  server {
    listen 8081;
    default_type plain/text;
    location / {
      content_by_lua '
        ngx.say("Hello ", ngx.req.get_headers()["X-USER"])
      ';
    }
  }
server {
       listen     80 default_server;
       root     /opt/nginx/html;
       resolver 127.0.0.11 valid=1s ipv6=off;
       access_by_lua '
         local opts = {
           redirect_uri_path = "/index.html",
           accept_none_alg = true,
           discovery = "http://192.168.43.239:3333/auth/realms/myrealm/.well-known/openid-configuration",
           client_id = "nginx",
           client_secret = "c1378f22-bc3d-4ec9-8cdd-db829de49570",
           redirect_uri_scheme = "http",
           logout_path = "/logout",
           redirect_after_logout_uri = "http://192.168.43.239:3333/auth/realms/myrealm/protocol/openid-connect/logout?redirect_uri=http://linux.machine.com/",
           redirect_after_logout_with_id_token_hint = false,
           session_contents = {id_token=true}
         }
         -- call introspect for OAuth 2.0 Bearer Access Token validation
         local res, err = require("resty.openidc").authenticate(opts)
         if err then
           ngx.status = 403
           ngx.say(err)
           ngx.exit(ngx.HTTP_FORBIDDEN)
         end
      ';

      # I disabled caching so the browser won't cache the site.
      expires           0;
      add_header        Cache-Control private;
         location / {

        }
        
        location ~* \.(js|jpg|png|css)$ {
            root /opt/nginx/html;
        }
      # redirect server error pages to the static page /40x.html
      #
      error_page 404 /404.html;
          location = /40x.html {
      }
      # redirect server error pages to the static page /50x.html
      #
      error_page 500 502 503 504 /50x.html;
          location = /50x.html {
      }
}
}